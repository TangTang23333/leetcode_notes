413. Arithmetic Slices
Medium

2169

209

Add to List

Share
An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.

For example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.
Given an integer array nums, return the number of arithmetic subarrays of nums.

A subarray is a contiguous subsequence of the array.

 

Example 1:

Input: nums = [1,2,3,4]
Output: 3
Explanation: We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.
Example 2:

Input: nums = [1]
Output: 0
 

Constraints:

1 <= nums.length <= 5000
-1000 <= nums[i] <= 1000



class Solution:
    def numberOfArithmeticSlices(self, nums: List[int]) -> int:
        n = len(nums)
        if n <= 2:
            return 0 
        
        
        i, j = 0, 0 
        last = nums[1] - nums[0]
        res = 0 
        
        
        while j < n:
            while j < n-1 and nums[j+1] - nums[j] == last:
                j += 1 
            
            
            res +=  (j-i) * (j-i-1) // 2  if j - i - 1 > 0 else 0 
            if j < n-1:
                # nums[i:j+1] 
                i = j 
                j = i + 1 
                if i > n-3:
                    return res 
                last = nums[j] - nums[i]
            
            else:
                return res 
            
            
        
                
            
# Memo:

- use two pointers with same way, O(N) 
