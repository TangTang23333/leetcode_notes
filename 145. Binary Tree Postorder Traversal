145. Binary Tree Postorder Traversal
Easy

3141

122

Add to List

Share
Given the root of a binary tree, return the postorder traversal of its nodes' values.


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def postorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        if not root: 
            return []
        
        stack = [root]
        res = []
        prev, node = None, root 
        
       
        # root is none  
        while stack:

            node = stack[-1]
            
            
            if not prev or prev.left == node or prev.right == node:
                if node.left:
                    stack.append(node.left)
                elif node.right:
                    stack.append(node.right)
                    
            elif node.left == prev:
                if node.right:
                    stack.append(node.right)
                    
            else:
                res.append(node.val)
                stack.pop()
        
            prev = node 
            
            
        return res 
                
            
        
        
        
