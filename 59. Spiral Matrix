59. Spiral Matrix II
Medium

2073

145

Add to List

Share
Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20


class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        res = [[0]*n for _ in range(n) ]
        self.outter(n, n, 1, res)
        return res
    
    
    
    def outter(self, n, m, start, res):
        if m == 0:
            return None 
        if m == 1 :
            res[0][0] = start 
            return res 
        
        # top row 
        res[0] = [nb for nb in range(start, start+m)] 
        start += m 
        
        # right col
        for i in range(1, m):
            res[i][-1] = start 
            start += 1 
            
        # bottom row 
        res[-1][:-1] = [nb for nb in range(start+m-2, start-1, -1)] 
        start += m-1 
        
        # left col 
        for i in range(m-2,0,-1):
            res[i][0] = start
            start += 1 
            
        
        
        new_res = self.outter(n, m-2, start, [[0]*(m-2) for _ in range(m-2)])
        for i in range(1, m-1):
            res[i][1:-1] = new_res[i-1]
            
        return res
